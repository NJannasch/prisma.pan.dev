{
  "components": {
    "securitySchemes": {
      "x-redlock-auth": {
        "description": "JWT Based Authentication",
        "in": "header",
        "name": "x-redlock-auth",
        "type": "apiKey"
      }
    },
    "requestBodies": {
      "MultiRoleUserProfile": {
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/MultiRoleUserProfile" }
          }
        },
        "description": "Model containing user profile",
        "required": true
      }
    },
    "schemas": {
      "MultiRoleUserProfile": {
        "description": "Model containing user profile",
        "properties": {
          "accessKeysAllowed": {
            "description": "Access keys allowed",
            "type": "boolean"
          },
          "activeRole": {
            "$ref": "#/components/schemas/UserProfileRoleDetailModel"
          },
          "defaultRoleId": {
            "description": "Default Role ID",
            "type": "string"
          },
          "displayName": {
            "description": "Display name",
            "readOnly": true,
            "type": "string"
          },
          "email": { "description": "Email ID", "type": "string" },
          "enabled": {
            "description": "Enabled",
            "readOnly": true,
            "type": "boolean"
          },
          "firstName": { "description": "First name", "type": "string" },
          "lastLoginTs": {
            "description": "Last login time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time profile was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastName": { "description": "Last name", "type": "string" },
          "roleIds": {
            "description": "Role IDs",
            "items": { "type": "string" },
            "type": "array"
          },
          "roles": {
            "description": "All Role Info",
            "items": {
              "$ref": "#/components/schemas/UserProfileRoleDetailModel"
            },
            "readOnly": true,
            "type": "array"
          },
          "timeZone": {
            "description": "Time zone (e.g. America/Los_Angeles)",
            "type": "string"
          }
        },
        "required": [
          "defaultRoleId",
          "email",
          "firstName",
          "lastName",
          "roleIds",
          "timeZone"
        ],
        "type": "object"
      },
      "UserProfileModel": {
        "description": "Model containing user profile",
        "properties": {
          "accessKeysAllowed": {
            "description": "Access keys allowed",
            "type": "boolean"
          },
          "displayName": {
            "description": "Display name",
            "readOnly": true,
            "type": "string"
          },
          "email": { "description": "Email ID", "type": "string" },
          "enabled": {
            "description": "Enabled",
            "readOnly": true,
            "type": "boolean"
          },
          "firstName": { "description": "First name", "type": "string" },
          "lastLoginTs": {
            "description": "Last login time",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastModifiedBy": {
            "description": "Last modified by",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTs": {
            "description": "Time profile was last updated",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "lastName": { "description": "Last name", "type": "string" },
          "role": {
            "additionalProperties": { "type": "string" },
            "description": "Role",
            "readOnly": true,
            "type": "object"
          },
          "roleId": { "description": "Role ID", "type": "string" },
          "roleType": {
            "description": "Role type",
            "readOnly": true,
            "type": "string"
          },
          "timeZone": {
            "description": "Time zone (e.g. America/Los_Angeles)",
            "type": "string"
          }
        },
        "required": ["email", "firstName", "lastName", "roleId", "timeZone"],
        "type": "object"
      },
      "UserProfileRoleDetailModel": {
        "description": "Model for User Profile Role Detail",
        "properties": {
          "id": {
            "description": "User Role ID",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "User Role Name",
            "readOnly": true,
            "type": "string"
          },
          "onlyAllowCIAccess": {
            "description": "true = Allow only CI Access for Build and Deploy security roles",
            "readOnly": true,
            "type": "boolean"
          },
          "onlyAllowComputeAccess": {
            "description": "true = Allow only Compute Access for reduced system admin roles",
            "readOnly": true,
            "type": "boolean"
          },
          "onlyAllowReadAccess": {
            "description": "true = Allow only Read Access for",
            "readOnly": true,
            "type": "boolean"
          },
          "type": {
            "description": "User Role Type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Manage your Prisma Cloud user profiles.\n",
    "title": "Prisma Cloud User Profile API Overview",
    "version": "Latest"
  },
  "openapi": "3.0.0",
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "tags": [
    {
      "description": "The User Profile APIs are listed below.",
      "name": "User Profile"
    }
  ],
  "paths": {
    "/user/me": {
      "get": {
        "description": "Returns the current user's personal profile information.",
        "operationId": "get-my-profile",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserProfileModel" }
              }
            },
            "description": "successful operation"
          },
          "400": { "description": "user_inactive_or_not_exist" },
          "500": { "description": "failed_fetch_user_profile" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Profile",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/me\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/user/me \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "put": {
        "description": "Updates the current user's personal profile information.  \r\n\r\nAlthough the role ID is required when you are updating another user's profile, the role ID is not required when you are updating your own profile.\n```\n{\n  \"firstName\": \"\",\n  \"lastName\": \"\",\n  \"timeZone\": \"\"\n}\n```\n",
        "operationId": "update-my-profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MultiRoleUserProfile" }
            }
          },
          "description": "Model containing user profile",
          "required": true
        },
        "responses": {
          "200": { "description": "successful operation" },
          "400": {
            "description": "empty_user_profile_provided / missing_first_name / missing_time_zone / invalid_time_zone / user_inactive_or_not_exist / default_role_not_belonging_to_user_role_list / invalid_user_role"
          },
          "403": { "description": "cannot_disable_own_profile" },
          "500": { "description": "failed_update_user_profile" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update Profile",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/me\"\n\npayload = \"{\\\"accessKeysAllowed\\\":true,\\\"activeRole\\\":{},\\\"defaultRoleId\\\":\\\"string\\\",\\\"email\\\":\\\"string\\\",\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\",\\\"roleIds\\\":[\\\"string\\\"],\\\"timeZone\\\":\\\"string\\\"}\"\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"PUT\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/user/me \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"accessKeysAllowed\":true,\"activeRole\":{},\"defaultRoleId\":\"string\",\"email\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"roleIds\":[\"string\"],\"timeZone\":\"string\"}'"
          }
        ]
      }
    },
    "/v2/user": {
      "get": {
        "description": "Returns a list of all the users belonging to the same tenant. Response includes multiple roles assigned to each user.",
        "operationId": "get-user-profiles-v2",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/UserProfileModel" },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": { "description": "failed_fetch_user_profile" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List Users V2",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/v2/user\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/v2/user \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "post": {
        "description": "Adds a new administrative user. Supports multiple roles for a single user.",
        "operationId": "add-user-v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MultiRoleUserProfile" }
            }
          },
          "description": "Model containing user profile",
          "required": true
        },
        "responses": {
          "200": { "description": "successful operation" },
          "400": {
            "description": "empty_user_profile_provided / missing_email / wrong_email_format / missing_first_name / missing_time_zoneinvalid_time_zone /  missing_required_parameter / no_role_assigned_to_user / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list / invalid_user_role"
          },
          "409": { "description": "duplicate_user_name" },
          "500": { "description": "failed_add_user_profile" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Add User Profile V2",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/v2/user\"\n\npayload = \"{\\\"accessKeysAllowed\\\":true,\\\"activeRole\\\":{},\\\"defaultRoleId\\\":\\\"string\\\",\\\"email\\\":\\\"string\\\",\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\",\\\"roleIds\\\":[\\\"string\\\"],\\\"timeZone\\\":\\\"string\\\"}\"\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/v2/user \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"accessKeysAllowed\":true,\"activeRole\":{},\"defaultRoleId\":\"string\",\"email\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"roleIds\":[\"string\"],\"timeZone\":\"string\"}'"
          }
        ]
      }
    },
    "/v2/user/{id}": {
      "get": {
        "description": "Returns the user profile for the specified email ID. Supports multiple roles for a single user.",
        "operationId": "get-user-profile-v2",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "pattern": ".+", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/UserProfileModel" }
              }
            },
            "description": "successful operation"
          },
          "400": { "description": "user_inactive_or_not_exist" },
          "500": { "description": "failed_fetch_user_profile" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Get User Profile V2",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/v2/user/{id}\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/v2/user/{id} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "put": {
        "description": "Updates an administrative user's profile. Supports multiple roles for a single user.",
        "operationId": "update-profile-v2",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "pattern": ".+", "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MultiRoleUserProfile" }
            }
          }
        },
        "responses": {
          "200": { "description": "successful operation" },
          "400": {
            "description": "empty_user_profile_provided / missing_first_name / missing_time_zone / invalid_time_zone / user_inactive_or_not_exist / exceeding_role_limit_number / default_role_not_belonging_to_user_role_list / invalid_user_role / invalid_user_role"
          },
          "403": { "description": "cannot_remove_current_log_in_role" },
          "500": { "description": "failed_update_user_profile" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update User Profile V2",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/v2/user/{id}\"\n\npayload = \"{\\\"accessKeysAllowed\\\":true,\\\"activeRole\\\":{},\\\"defaultRoleId\\\":\\\"string\\\",\\\"email\\\":\\\"string\\\",\\\"firstName\\\":\\\"string\\\",\\\"lastName\\\":\\\"string\\\",\\\"roleIds\\\":[\\\"string\\\"],\\\"timeZone\\\":\\\"string\\\"}\"\nheaders = {\n    'content-type': \"application/json\",\n    'x-redlock-auth': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PUT\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/v2/user/{id} \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '{\"accessKeysAllowed\":true,\"activeRole\":{},\"defaultRoleId\":\"string\",\"email\":\"string\",\"firstName\":\"string\",\"lastName\":\"string\",\"roleIds\":[\"string\"],\"timeZone\":\"string\"}'"
          }
        ]
      }
    },
    "/user/{id}": {
      "delete": {
        "description": "Deletes an administrative user's profile.",
        "operationId": "delete-user",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "pattern": ".+", "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "successful operation" },
          "400": { "description": "user_inactive_or_not_exist" },
          "403": { "description": "cannot_delete_own_profile" },
          "500": { "description": "internal_error" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Delete User Profile",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/{id}\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.prismacloud.io/user/{id} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/user/{id}/status/{enabled}": {
      "patch": {
        "description": "Enables or disables a user profile.",
        "operationId": "update-user-profile",
        "parameters": [
          {
            "description": "User email",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "pattern": ".+", "type": "string" }
          },
          {
            "description": "Status to set",
            "in": "path",
            "name": "enabled",
            "required": true,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": { "200": { "description": "successful operation" } },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update User Status",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/{id}/status/{enabled}\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"PATCH\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PATCH \\\n  --url https://api.prismacloud.io/user/{id}/status/{enabled} \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/user/name": {
      "get": {
        "description": "Returns a list of emails for all non-deleted users in the system.",
        "operationId": "get-usernames",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "additionalProperties": { "type": "string" },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "500": { "description": "failed_fetch_users_emails" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List User Emails",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/name\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/user/name \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/user/role/type": {
      "get": {
        "description": "Returns a list of permission groups to which users can belong.",
        "operationId": "get-user-role-types",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": {
                    "enum": [
                      "SYSTEM_ADMIN",
                      "ACCOUNT_ADMIN",
                      "ACCOUNT_READ_ONLY",
                      "SSO_ADMIN",
                      "CLOUD_PROVISIONING_ADMIN",
                      "TENANT_PROVISIONING_ADMIN",
                      "PRISMA_SERVICE_USER",
                      "ACCOUNT_AND_CLOUD_PROVISIONING_ADMIN",
                      "BUILD_AND_DEPLOY_SECURITY",
                      "BUILD_AND_DEPLOY_SECURITY_CI",
                      "COMPUTE_ADMIN",
                      "NETWORK_SECURITY_OPERATOR",
                      "NETWORK_SECURITY_OPERATOR_READ_ONLY",
                      "COMPUTE_ACCOUNT_ADMIN"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List User Role Types",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/role/type\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/user/role/type \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/user/domain": {
      "get": {
        "description": "Returns a list of domains in allow list.",
        "operationId": "email-domains",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": { "items": { "type": "string" }, "type": "array" }
              }
            },
            "description": "successful operation"
          },
          "400": { "description": "no_user_added" },
          "500": { "description": "failed_fetch_email_domain_allow_list" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List Email Domains",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/domain\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/user/domain \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/user/saml/bypass": {
      "get": {
        "description": "Returns a list of users who can log in via both SAML provider and username/password flows.  \r\n\r\nThe request body is an array of emails to be bypassed.\n```\n   [ \"jon.snow@example.com\", \"daenerys@example.com\" ]\n```\n",
        "operationId": "get-sso-bypass-allowed-users",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "uniqueItems": true
                }
              }
            },
            "description": "successful operation"
          },
          "500": { "description": "failed_fetch_sso_bypass_allowed_users" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "List SSO Bypass Allowed Users",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/saml/bypass\"\n\nheaders = {'x-redlock-auth': 'REPLACE_KEY_VALUE'}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/user/saml/bypass \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'"
          }
        ]
      },
      "put": {
        "description": "Given a list of Prisma Cloud user emails, enables each user in the list to log into Prisma Cloud through either a SAML provider or direct user name and password entry.",
        "operationId": "update-sso-bypass-allowed-users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "items": { "type": "string" }, "type": "array" }
            }
          },
          "description": "SSO Bypass allowed users",
          "required": true
        },
        "responses": {
          "200": { "description": "successful operation" },
          "400": { "description": "missing_sso_bypass_allowed_users" },
          "500": { "description": "failed_update_sso_bypass_allowed_users" }
        },
        "security": [{ "x-redlock-auth": [] }],
        "summary": "Update SSO Bypass Allowed Users",
        "tags": ["User Profile"],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/user/saml/bypass\"\n\npayload = \"[\\\"string\\\"]\"\nheaders = {\n    'content-type': \"application/json\",\n    'x-redlock-auth': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PUT\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/user/saml/bypass \\\n  --header 'content-type: application/json' \\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\n  --data '[\"string\"]'"
          }
        ]
      }
    }
  }
}
